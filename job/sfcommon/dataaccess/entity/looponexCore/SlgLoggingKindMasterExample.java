package job.sfcommon.dataaccess.entity.looponexCore;

import java.util.ArrayList;
import java.util.List;

import javax.enterprise.context.Dependent;

@Dependent
public class SlgLoggingKindMasterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public SlgLoggingKindMasterExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLoggingKindNameIsNull() {
            addCriterion("logging_kind_name is null");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameIsNotNull() {
            addCriterion("logging_kind_name is not null");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameEqualTo(String value) {
            addCriterion("logging_kind_name =", value, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameNotEqualTo(String value) {
            addCriterion("logging_kind_name <>", value, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameGreaterThan(String value) {
            addCriterion("logging_kind_name >", value, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameGreaterThanOrEqualTo(String value) {
            addCriterion("logging_kind_name >=", value, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameLessThan(String value) {
            addCriterion("logging_kind_name <", value, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameLessThanOrEqualTo(String value) {
            addCriterion("logging_kind_name <=", value, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameLike(String value) {
            addCriterion("logging_kind_name like", value, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameNotLike(String value) {
            addCriterion("logging_kind_name not like", value, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameIn(List<String> values) {
            addCriterion("logging_kind_name in", values, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameNotIn(List<String> values) {
            addCriterion("logging_kind_name not in", values, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameBetween(String value1, String value2) {
            addCriterion("logging_kind_name between", value1, value2, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameNotBetween(String value1, String value2) {
            addCriterion("logging_kind_name not between", value1, value2, "loggingKindName");
            return (Criteria) this;
        }

        public Criteria andDispOrderIsNull() {
            addCriterion("disp_order is null");
            return (Criteria) this;
        }

        public Criteria andDispOrderIsNotNull() {
            addCriterion("disp_order is not null");
            return (Criteria) this;
        }

        public Criteria andDispOrderEqualTo(Integer value) {
            addCriterion("disp_order =", value, "dispOrder");
            return (Criteria) this;
        }

        public Criteria andDispOrderNotEqualTo(Integer value) {
            addCriterion("disp_order <>", value, "dispOrder");
            return (Criteria) this;
        }

        public Criteria andDispOrderGreaterThan(Integer value) {
            addCriterion("disp_order >", value, "dispOrder");
            return (Criteria) this;
        }

        public Criteria andDispOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("disp_order >=", value, "dispOrder");
            return (Criteria) this;
        }

        public Criteria andDispOrderLessThan(Integer value) {
            addCriterion("disp_order <", value, "dispOrder");
            return (Criteria) this;
        }

        public Criteria andDispOrderLessThanOrEqualTo(Integer value) {
            addCriterion("disp_order <=", value, "dispOrder");
            return (Criteria) this;
        }

        public Criteria andDispOrderIn(List<Integer> values) {
            addCriterion("disp_order in", values, "dispOrder");
            return (Criteria) this;
        }

        public Criteria andDispOrderNotIn(List<Integer> values) {
            addCriterion("disp_order not in", values, "dispOrder");
            return (Criteria) this;
        }

        public Criteria andDispOrderBetween(Integer value1, Integer value2) {
            addCriterion("disp_order between", value1, value2, "dispOrder");
            return (Criteria) this;
        }

        public Criteria andDispOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("disp_order not between", value1, value2, "dispOrder");
            return (Criteria) this;
        }

        public Criteria andLoggingKindIsNull() {
            addCriterion("logging_kind is null");
            return (Criteria) this;
        }

        public Criteria andLoggingKindIsNotNull() {
            addCriterion("logging_kind is not null");
            return (Criteria) this;
        }

        public Criteria andLoggingKindEqualTo(Integer value) {
            addCriterion("logging_kind =", value, "loggingKind");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNotEqualTo(Integer value) {
            addCriterion("logging_kind <>", value, "loggingKind");
            return (Criteria) this;
        }

        public Criteria andLoggingKindGreaterThan(Integer value) {
            addCriterion("logging_kind >", value, "loggingKind");
            return (Criteria) this;
        }

        public Criteria andLoggingKindGreaterThanOrEqualTo(Integer value) {
            addCriterion("logging_kind >=", value, "loggingKind");
            return (Criteria) this;
        }

        public Criteria andLoggingKindLessThan(Integer value) {
            addCriterion("logging_kind <", value, "loggingKind");
            return (Criteria) this;
        }

        public Criteria andLoggingKindLessThanOrEqualTo(Integer value) {
            addCriterion("logging_kind <=", value, "loggingKind");
            return (Criteria) this;
        }

        public Criteria andLoggingKindIn(List<Integer> values) {
            addCriterion("logging_kind in", values, "loggingKind");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNotIn(List<Integer> values) {
            addCriterion("logging_kind not in", values, "loggingKind");
            return (Criteria) this;
        }

        public Criteria andLoggingKindBetween(Integer value1, Integer value2) {
            addCriterion("logging_kind between", value1, value2, "loggingKind");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNotBetween(Integer value1, Integer value2) {
            addCriterion("logging_kind not between", value1, value2, "loggingKind");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpIsNull() {
            addCriterion("logging_kind_name_jp is null");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpIsNotNull() {
            addCriterion("logging_kind_name_jp is not null");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpEqualTo(String value) {
            addCriterion("logging_kind_name_jp =", value, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpNotEqualTo(String value) {
            addCriterion("logging_kind_name_jp <>", value, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpGreaterThan(String value) {
            addCriterion("logging_kind_name_jp >", value, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpGreaterThanOrEqualTo(String value) {
            addCriterion("logging_kind_name_jp >=", value, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpLessThan(String value) {
            addCriterion("logging_kind_name_jp <", value, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpLessThanOrEqualTo(String value) {
            addCriterion("logging_kind_name_jp <=", value, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpLike(String value) {
            addCriterion("logging_kind_name_jp like", value, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpNotLike(String value) {
            addCriterion("logging_kind_name_jp not like", value, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpIn(List<String> values) {
            addCriterion("logging_kind_name_jp in", values, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpNotIn(List<String> values) {
            addCriterion("logging_kind_name_jp not in", values, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpBetween(String value1, String value2) {
            addCriterion("logging_kind_name_jp between", value1, value2, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingKindNameJpNotBetween(String value1, String value2) {
            addCriterion("logging_kind_name_jp not between", value1, value2, "loggingKindNameJp");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameIsNull() {
            addCriterion("logging_table_name is null");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameIsNotNull() {
            addCriterion("logging_table_name is not null");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameEqualTo(String value) {
            addCriterion("logging_table_name =", value, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameNotEqualTo(String value) {
            addCriterion("logging_table_name <>", value, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameGreaterThan(String value) {
            addCriterion("logging_table_name >", value, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameGreaterThanOrEqualTo(String value) {
            addCriterion("logging_table_name >=", value, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameLessThan(String value) {
            addCriterion("logging_table_name <", value, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameLessThanOrEqualTo(String value) {
            addCriterion("logging_table_name <=", value, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameLike(String value) {
            addCriterion("logging_table_name like", value, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameNotLike(String value) {
            addCriterion("logging_table_name not like", value, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameIn(List<String> values) {
            addCriterion("logging_table_name in", values, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameNotIn(List<String> values) {
            addCriterion("logging_table_name not in", values, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameBetween(String value1, String value2) {
            addCriterion("logging_table_name between", value1, value2, "loggingTableName");
            return (Criteria) this;
        }

        public Criteria andLoggingTableNameNotBetween(String value1, String value2) {
            addCriterion("logging_table_name not between", value1, value2, "loggingTableName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.slg_logging_kind_master
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}